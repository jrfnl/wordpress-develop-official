os: linux
dist: xenial

language: generic

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

cache:
  apt: true
  directories:
    - $HOME/.npm
    - vendor

env:
  global:
    - LOCAL_DIR: build
    - COMPOSER_INSTALL: false
    - NPM_INSTALL: true
    - WP_INSTALL: true
    - PHP_FPM_UID: "`id -u`"
    - PHP_FPM_GID: "`id -g`"
    - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

jobs:
  include:
  - env: LOCAL_PHP=7.4-fpm WP_TRAVISCI=test:php LOCAL_PHP_XDEBUG=true
    name: "PHPUnit Tests: PHP 7.4"

  fast_finish: true

before_install:
- |
  if [[ "$WP_TRAVISCI" == "test:php" ]]; then
      travis_retry svn checkout -r 2170172 https://plugins.svn.wordpress.org/wordpress-importer/trunk/ tests/phpunit/data/plugins/wordpress-importer
  fi
- |
  sudo rm /usr/local/bin/docker-compose
  curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > docker-compose
  chmod +x docker-compose
  sudo mv docker-compose /usr/local/bin

before_script:
- docker-compose run --rm php composer --version
- docker-compose run --rm php composer install
- docker-compose run --rm php composer require --dev --no-suggest --no-scripts php-coveralls/php-coveralls:"^2.0"

- npm --version
- node --version
- nvm install --latest-npm
- |
  if [[ "$NPM_INSTALL" == "true" ]]; then
    npm ci
  fi
- |
  if [[ "$WP_TRAVISCI" == "test:e2e" ]] || [[ "$WP_TRAVISCI" == "test:php" ]]; then
    npm run env:start
    npm run build
    docker-compose run --rm mysql mysql --version
    docker-compose run --rm php php --version
    docker-compose run --rm php php -m
  fi
- |
  if [[ ${LOCAL_PHP:0:3} == "8.0" ]]; then
    docker-compose run --rm phpunit php ./vendor/bin/phpunit --version
  elif [[ "$WP_TRAVISCI" == "test:e2e" ]] || [[ "$WP_TRAVISCI" == "test:php" ]]; then
    docker-compose run --rm phpunit phpunit --version
  fi
- |
  if [[ "$LOCAL_PHP_MEMCACHED" == "true" ]]; then
    cp tests/phpunit/includes/object-cache.php build/wp-content/object-cache.php
    # The memcached server needs to start after `npm run env:start`, which sets up the Docker network.
    docker run --name memcached --net $(basename "$PWD")_wpdevnet -d memcached
  fi
- |
  if [[ "$WP_INSTALL" == "true" ]]; then
    # Run the install process after memcached has started.
    npm run env:install
  fi
- npm --version
- node --version
- curl --version
- git --version
- svn --version
- php --version
- php -i
- locale -a

script:
  - npm run test:php -- --verbose -c phpunit.xml.dist --group ajax --coverage-clover tests/phpunit/build/logs/clover-ajax.xml
# &&
#    npm run test:php -- --verbose -c phpunit.xml.dist --group ajax &&
#    npm run test:php -- --verbose -c tests/phpunit/multisite.xml &&
#    npm run test:php -- --verbose -c tests/phpunit/multisite.xml --group ms-files &&
#    npm run test:php -- --verbose -c phpunit.xml.dist --group external-http &&
#    npm run test:php -- --verbose -c phpunit.xml.dist --group restapi-jsclient &&
    # __fakegroup__ is excluded to force PHPUnit to ignore the <exclude> settings in phpunit.xml.dist.
#    npm run test:php -- -v --group xdebug --exclude-group __fakegroup__

after_success:
  - docker-compose run -e TRAVIS="$TRAVIS" -e TRAVIS_JOB_ID="$TRAVIS_JOB_ID"
  - docker-compose run --rm php composer report-coverage
